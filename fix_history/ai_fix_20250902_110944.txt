### ai_code.py
```python
def multiply_numbers(a, b):
    return a * b

def divide_numbers(a, b):
    if b == 0:
        raise ValueError("Cannot divide by zero")
    return a / b
``` 

### test_ai_code.py
```python
from ai_code import multiply_numbers, divide_numbers

def test_multiply_numbers():
    assert multiply_numbers(2, 3) == 6
    assert multiply_numbers(-1, 1) == -1
    assert multiply_numbers(0, 5) == 0

def test_divide_numbers():
    assert divide_numbers(6, 3) == 2
    assert divide_numbers(5, 2) == 2.5
    try:
        divide_numbers(1, 0)
    except ValueError:
        pass  # The test passes if ValueError is raised
    else:
        assert False, "Expected ValueError not raised"
```